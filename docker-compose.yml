version: '3'

services:

    #Centralized Log Management
    seq:
        image: datalust/seq:latest
        ports:
            - 5341:80
        environment: 
            ACCEPT_EULA: Y
        restart: unless-stopped
        volumes: 
            - ./seq-data:/data 
    
    postgresql-master:
        image: 'bitnami/postgresql:latest'
        restart: 'on-failure'
        ports:
        - '5432'
        volumes:
        - './postgresql_master_data:/bitnami/postgresql'
        - './KeyRangeGeneratorSQL/create_table.sql:/docker-entrypoint-initdb.d/create_tables.sql'
        - './KeyRangeGeneratorSQL/fill_table.sql:/docker-entrypoint-initdb.d/fill_tables.sql'
        environment:
        - POSTGRESQL_REPLICATION_MODE=master
        - POSTGRESQL_REPLICATION_USER=repl_user
        - POSTGRESQL_REPLICATION_PASSWORD=repl_password
        - POSTGRESQL_USERNAME=my_user
        - POSTGRESQL_PASSWORD=my_password
        - POSTGRESQL_DATABASE=my_database
      
    postgresql-slave:
        image: 'bitnami/postgresql:latest'
        ports:
        - '5432'
        depends_on:
        - postgresql-master
        environment:
        - POSTGRESQL_REPLICATION_MODE=slave
        - POSTGRESQL_REPLICATION_USER=repl_user
        - POSTGRESQL_REPLICATION_PASSWORD=repl_password
        - POSTGRESQL_MASTER_HOST=postgresql-master
        - POSTGRESQL_PASSWORD=my_password
        - POSTGRESQL_MASTER_PORT_NUMBER=5432  
    
    key-range-provider:
        environment:
            - "ASPNETCORE_LOG_HOST=http://seq:5341"
            - "ASPNETCORE_DB_CONN=Host=postgresql-master;Port=5432;User Id=my_user;Password=my_password;Database=my_database;Pooling=true;"
        build: ./HelloShortly.KeyManagementSolutions/HelloShortly.KMM.RestApi/
        restart: unless-stopped
        expose: 
            - "80"
        links:
            - seq
            - postgresql-master   
            
    #Load balancer for Key Range Service Provider
    nginx:
        image: nginx:latest
        restart: on-failure
        volumes:
          - ./KeyRangeServiceLoadBalancerConfig/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
          - key-range-provider
        ports:
          - "4000:4000" 

    mongo1:
        hostname: mongo1
        container_name: localmongo1
        image: mongo:4.0-xenial
        expose:
            - 27017
        ports:
            - 27011:27017
        restart: unless-stopped
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

    mongo2:
        hostname: mongo2
        container_name: localmongo2
        image: mongo:4.0-xenial
        expose:
            - 27017
        ports:
            - 27012:27017
        restart: unless-stopped
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

    mongo3:
        hostname: mongo3
        container_name: localmongo3
        image: mongo:4.0-xenial
        expose:
            - 27017
        ports:
            - 27013:27017
        restart: unless-stopped
        entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    
    redis-master:
        hostname: redis-master
        image: bitnami/redis:latest
        restart: unless-stopped
        volumes: 
            - ./data:/bitnami
        ports: 
            - '6379:6379'
        environment: 
            - "REDIS_REPLICATION_MODE=master"
            - "ALLOW_EMPTY_PASSWORD=yes"
            
    url_distributer:
        build: ./HelloShortly.UrlDistributerSolutions/HelloShortly.UrlDistributerRestApi/
        restart: on-failure
        ports: 
            - 6090:80
        environment:
            - "ASPNETCORE_LOG_HOST=http://seq:5341"
            - "KEY_RANGE_GET_API=http://localhost:4000/KeyRanges"
            - "MONGO_CONN=mongodb://localhost:27011/short_urls"
            - "MONGO_DB_NAME=short_urls"
            #- "Mongo_COLLECTION_NAME="
            - "REDIS_CONN=localhost:6379" 
            - "LOAD_BALANCER=http://localhost:8080/"
        links:
            - seq
            - mongo1
            - redis-master

    
            

    #Load balancer for Key Range Service Provider
    
            

    
    
    
    
        
    

  